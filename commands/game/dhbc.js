const { SlashCommandBuilder, PermissionFlagsBits } = require('discord.js');
const axios = require('axios');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('dhbc')
        .setDescription('Ch∆°i tr√≤ ƒêu·ªïi H√¨nh B·∫Øt Ch·ªØ!'),

    async execute(interaction) {
        await interaction.deferReply(); // ƒê·ª£i API ph·∫£n h·ªìi
        
        try {
            const response = await axios.get('https://subhatde.id.vn/game/dhbcv2');
            const data = response.data;
            const { tukhoa, sokitu, suggestions, link1, link2 } = data.doanhinh;
            
            // G·ª≠i h√¨nh ·∫£nh v√† vƒÉn b·∫£n y√™u c·∫ßu tr·∫£ l·ªùi
            const message = await interaction.editReply({
                content: `ü¶è **ƒêU·ªîI H√åNH B·∫ÆT CH·ªÆ** üå¥\nüî† G·ª£i √Ω: **${suggestions}**\n‚ùì S·ªë k√Ω t·ª±: **${sokitu}**\nüí¨ Tr·∫£ l·ªùi b·∫±ng c√°ch reply tin nh·∫Øn n√†y!`,
                files: [link1, link2]
            });
            
            // T·∫°o b·ªô thu th·∫≠p ph·∫£n h·ªìi
            const filter = m => m.reference && m.reference.messageId === message.id;
            const collector = interaction.channel.createMessageCollector({ filter, time: 60000 });
            
            collector.on('collect', async m => {
                if (m.content.toLowerCase() === tukhoa.toLowerCase()) {
                    await m.reply('‚úÖ Ch√≠nh x√°c! C√¢u h·ªèi m·ªõi s·∫Ω ƒë·∫øn sau 5 gi√¢y...');
                    
                    setTimeout(async () => {
                        // Ki·ªÉm tra n·∫øu bot c√≥ quy·ªÅn x√≥a tin nh·∫Øn
                        if (interaction.guild && interaction.channel.permissionsFor(interaction.client.user).has(PermissionFlagsBits.ManageMessages)) {
                            try {
                                await message.delete(); // X√≥a tin nh·∫Øn c≈©
                                await m.delete(); // X√≥a tin nh·∫Øn c·ªßa ng∆∞·ªùi ch∆°i
                            } catch (err) {
                                console.warn('Kh√¥ng th·ªÉ x√≥a tin nh·∫Øn:', err);
                            }
                        }

                        // Ti·∫øp t·ª•c c√¢u h·ªèi m·ªõi m√† kh√¥ng g·∫∑p l·ªói 2FA
                        module.exports.execute(interaction);
                    }, 5000);

                    collector.stop(); // D·ª´ng b·ªô thu th·∫≠p
                } else {
                    await m.reply('‚ùå B√© iu sai √≤ii!');
                }
            });
            
            collector.on('end', collected => {
                if (collected.size === 0) {
                    interaction.followUp('‚è≥ H·∫øt th·ªùi gian! C√¢u h·ªèi k·∫øt th√∫c.');
                }
            });
        } catch (error) {
            console.error(error);
            await interaction.editReply('‚ùå L·ªói khi l·∫•y d·ªØ li·ªáu t·ª´ API, vui l√≤ng th·ª≠ l·∫°i sau!');
        }
    }
};
